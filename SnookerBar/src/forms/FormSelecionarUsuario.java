/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.Conexao;
import classes.Utilitarios;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yanni
 */
public class FormSelecionarUsuario extends javax.swing.JInternalFrame {

    Utilitarios u = new Utilitarios();
    DefaultTableModel modelo;
    
    /**
     * Creates new form FormSelecionarUsuario
     */
    public FormSelecionarUsuario()
    {
        initComponents();
        
        lblTermo.setVisible(false);
        txtTermo.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pesquisarButtonGroup = new javax.swing.ButtonGroup();
        pesquisarPanel = new javax.swing.JPanel();
        rbtCdUsuario = new javax.swing.JRadioButton();
        rbtNmUsuario = new javax.swing.JRadioButton();
        txtTermo = new javax.swing.JTextField();
        btnPesquisarTudo = new javax.swing.JButton();
        lblTermo = new javax.swing.JLabel();
        btnPesquisar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        tabelaUsuario = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Consultar Usuário");

        pesquisarPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar por:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0)));
        pesquisarPanel.setToolTipText("Pesquisar por código ou nome do usuário");

        pesquisarButtonGroup.add(rbtCdUsuario);
        rbtCdUsuario.setText("Código");
        rbtCdUsuario.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbtCdUsuarioActionPerformed(evt);
            }
        });

        pesquisarButtonGroup.add(rbtNmUsuario);
        rbtNmUsuario.setText("Nome");
        rbtNmUsuario.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbtNmUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pesquisarPanelLayout = new javax.swing.GroupLayout(pesquisarPanel);
        pesquisarPanel.setLayout(pesquisarPanelLayout);
        pesquisarPanelLayout.setHorizontalGroup(
            pesquisarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pesquisarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pesquisarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtCdUsuario)
                    .addComponent(rbtNmUsuario))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        pesquisarPanelLayout.setVerticalGroup(
            pesquisarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pesquisarPanelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(rbtCdUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtNmUsuario))
        );

        btnPesquisarTudo.setText("Pesquisar tudo");
        btnPesquisarTudo.setToolTipText("Clique aqui para pesquisar todos os usuários");
        btnPesquisarTudo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnPesquisarTudoActionPerformed(evt);
            }
        });

        lblTermo.setText("Termo:");

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setToolTipText("Clique aqui para pesquisar o usuário");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Selecione a linha e clique aqui para excluir o usuário");
        btnExcluir.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.setToolTipText("Selecione a linha e clique aqui para alterar o usuário");
        btnAlterar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAlterarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.setToolTipText("Clique aqui para limpar os valores");
        btnLimpar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnLimparActionPerformed(evt);
            }
        });

        tabelaUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Código", "Login", "Administrador?"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(tabelaUsuario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTermo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTermo, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(pesquisarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPesquisarTudo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPesquisar)
                            .addComponent(btnPesquisarTudo)
                            .addComponent(btnExcluir))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimpar)
                            .addComponent(btnAlterar)))
                    .addComponent(pesquisarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTermo)
                    .addComponent(txtTermo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-467)/2, (screenSize.height-467)/2, 467, 467);
    }// </editor-fold>//GEN-END:initComponents

    private void rbtCdUsuarioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rbtCdUsuarioActionPerformed
    {//GEN-HEADEREND:event_rbtCdUsuarioActionPerformed
        lblTermo.setVisible(true);
        txtTermo.setVisible(true);
        lblTermo.setText("Código:");
        txtTermo.setToolTipText("Digite o código do usuário para pesquisar");
    }//GEN-LAST:event_rbtCdUsuarioActionPerformed

    private void rbtNmUsuarioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rbtNmUsuarioActionPerformed
    {//GEN-HEADEREND:event_rbtNmUsuarioActionPerformed
        lblTermo.setVisible(true);
        txtTermo.setVisible(true);
        lblTermo.setText("Nome:");
        txtTermo.setToolTipText("Digite o nome do usuário para pesquisar");
    }//GEN-LAST:event_rbtNmUsuarioActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnLimparActionPerformed
    {//GEN-HEADEREND:event_btnLimparActionPerformed
        try
        {
            for(int c = modelo.getRowCount() - 1; c >= 0; c--)
            {
                modelo.removeRow(c);
            }
        }
        catch(NullPointerException e){
            System.out.println("Não há dados na tabela");
        }
        u.limparTextFields(this);
        rbtCdUsuario.setSelected(true);
        rbtCdUsuarioActionPerformed(evt);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAlterarActionPerformed
    {//GEN-HEADEREND:event_btnAlterarActionPerformed
        if(tabelaUsuario.getSelectedRow() >= 0)
        {
            /*FormAlterarUsuario fau = new FormAlterarUsuario();
            this.getDesktopPane().add(fau);
            fau.setFrameIcon(new ImageIcon(getClass().getResource("/imagens/icon.png")));
            fau.setVisible(true);*/
        }
        else {
            JOptionPane.showMessageDialog(null, "Selecione alguma linha para alterar.", "Aviso", 2);
        }
        
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnPesquisarTudoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnPesquisarTudoActionPerformed
    {//GEN-HEADEREND:event_btnPesquisarTudoActionPerformed
        modelo = (DefaultTableModel) tabelaUsuario.getModel();
        modelo.setRowCount(0);
        String admin;
        
        try
        {            
            String sql = "SELECT * FROM USUARIO ORDER BY 1";                                    
            ResultSet res = Conexao.consultar(sql);            
         
            if(Conexao.consultar(sql) == null){
                JOptionPane.showMessageDialog(null, "Erro na consulta.", "Erro!", 0);
            }
            else
            { 
                if(Conexao.consultar(sql).next())
                {
                    while(res.next())
                    {
                        if(res.getString("ic_administrador_sim_nao").equalsIgnoreCase("s")){
                            admin = "Sim";
                        }
                        else{
                            admin = "Não";
                        }

                        modelo.addRow(new Object[] {
                            res.getInt("cd_usuario"),
                            res.getString("nm_login_usuario"),
                            admin
                        });
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Dados não encontrados.", "Aviso", 1);
                    btnLimparActionPerformed(evt);
                }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Erro na consulta. \n" + e.getMessage(), "Erro!", 0);
        }
    }//GEN-LAST:event_btnPesquisarTudoActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnPesquisarActionPerformed
    {//GEN-HEADEREND:event_btnPesquisarActionPerformed
        int cod;
        String nome;
        String sql = "";
        boolean erro = false;
        
        if(rbtCdUsuario.isSelected())
        {
            try {
                cod = Integer.parseInt(txtTermo.getText());
                sql = "SELECT * FROM USUARIO WHERE cd_usuario = " + cod;
                erro = false;            
            }
            catch(NumberFormatException e)
            {
                JOptionPane.showMessageDialog(null, "Digite somente números.", "Aviso", 2);
                erro = true;
                u.limparTextFields(this);
            }
        }
        else if(rbtNmUsuario.isSelected())
        {
            nome = txtTermo.getText().toLowerCase();
            sql = "SELECT * FROM USUARIO WHERE nm_login_usuario = '" + nome + "'";
        }
        
        if(!erro)
        {
            String admin;
            modelo = (DefaultTableModel) tabelaUsuario.getModel();
            modelo.setRowCount(0);

            try
            {  
                ResultSet res = Conexao.consultar(sql);            

                if(Conexao.consultar(sql) == null)
                {
                    JOptionPane.showMessageDialog(null, "Não há linhas selecionadas.", "Erro!", 0);
                }
                else
                { 
                    if(Conexao.consultar(sql).next())
                    {
                        while(res.next())
                        {
                            if(res.getString("ic_administrador_sim_nao").equalsIgnoreCase("s")){
                                admin = "Sim";
                            }
                            else{
                                admin = "Não";
                            }

                             modelo.addRow(new Object[] {
                                res.getInt("cd_usuario"),
                                res.getString("nm_login_usuario"),
                                admin
                            });
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Dado não encontrado.", "Aviso", 1);
                    }
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Erro na consulta. \n" + e.getMessage(), "Erro!", 0);
            }
         }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnExcluirActionPerformed
    {//GEN-HEADEREND:event_btnExcluirActionPerformed
        //não permitir que todos os administradores sejam apagados
        if(tabelaUsuario.getSelectedRow() >= 0)
        {
            String cod = tabelaUsuario.getValueAt(tabelaUsuario.getSelectedRow(), 0).toString();         
            
            //Confirma a operação
            if(JOptionPane.showConfirmDialog(null, "Confirma a exclusão do registro " + cod + "?") == JOptionPane.YES_OPTION)
            {
                String sql = "DELETE FROM USUARIO WHERE cd_usuario=" + cod;
                
                try
                {
                    ResultSet res = Conexao.consultar(sql);
                    btnPesquisarTudoActionPerformed(evt);
                    u.limparTextFields(this);
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "O registro não pode ser excluído.", "Erro", 0);
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Selecione alguma linha para excluir.", "Aviso", 2);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnPesquisarTudo;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel lblTermo;
    private javax.swing.ButtonGroup pesquisarButtonGroup;
    private javax.swing.JPanel pesquisarPanel;
    private javax.swing.JRadioButton rbtCdUsuario;
    private javax.swing.JRadioButton rbtNmUsuario;
    private javax.swing.JTable tabelaUsuario;
    private javax.swing.JTextField txtTermo;
    // End of variables declaration//GEN-END:variables
}
